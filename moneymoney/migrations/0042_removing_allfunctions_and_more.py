# Generated by Django 4.2.3 on 2023-07-08 16:55

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("moneymoney", "0041_auto_20230513_0928"),
    ]

    operations = [
        migrations.RunSQL("""
DROP FUNCTION public.account_balance(INOUT account_id integer, INOUT at_datetime timestamp with time zone, OUT balance_account_currency numeric, OUT balance_user_currency numeric, INOUT user_currency text);
DROP FUNCTION public.accounts_balance(at_datetime timestamp with time zone, user_currency text);
DROP FUNCTION public.create_role_if_not_exists(rolename name);
DROP FUNCTION public.currency_factor(at_datetime timestamp with time zone, currency_from text, currency_to text);
DROP FUNCTION public.is_price_variation_in_time(p_id_products integer, p_percentage double precision, p_datetime timestamp with time zone);
DROP FUNCTION public.last_penultimate_lastyear(INOUT id integer, at_datetime timestamp with time zone, OUT last_datetime timestamp with time zone, OUT last numeric, OUT penultimate_datetime timestamp with time zone, OUT penultimate numeric, OUT lastyear_datetime timestamp with time zone, OUT lastyear numeric);
DROP FUNCTION public.money_convert(at_datetime timestamp with time zone, amount_from numeric, currency_from text, currency_to text);
DROP FUNCTION public.ohcldaily(product_id integer);
DROP FUNCTION public.ohcldailybeforesplits(product_id integer);
DROP FUNCTION public.ohclmonthlybeforesplits(product_id integer);
DROP FUNCTION public.penultimate(INOUT id integer, date date, OUT quote numeric, OUT datetime timestamp with time zone, OUT searched timestamp with time zone);
DROP FUNCTION public.percentage(from_ numeric, to_ numeric, by_100 boolean);
DROP FUNCTION public.pl_investment_operations(p_at_datetime timestamp with time zone, currency_user text, investments_ids integer[], mode integer );
DROP FUNCTION public.pl_total_balance(p_at_datetime timestamp with time zone, user_currency text);
DROP FUNCTION public.quote(INOUT id integer, INOUT datetime timestamp with time zone, OUT quote numeric, OUT searched timestamp with time zone);
DROP AGGREGATE public.median(numeric);
DROP FUNCTION public._final_median(numeric[]);
DROP EXTENSION IF EXISTS plpython3u;
DROP EXTENSION IF EXISTS fuzzystrmatch;
        """)
    ]